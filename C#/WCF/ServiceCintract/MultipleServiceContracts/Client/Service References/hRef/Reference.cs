//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.hRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="hRef.iSum")]
    public interface iSum {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iSum/GetSum", ReplyAction="http://tempuri.org/iSum/GetSumResponse")]
        int GetSum(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iSum/GetSum", ReplyAction="http://tempuri.org/iSum/GetSumResponse")]
        System.Threading.Tasks.Task<int> GetSumAsync(int x, int y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface iSumChannel : Client.hRef.iSum, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class iSumClient : System.ServiceModel.ClientBase<Client.hRef.iSum>, Client.hRef.iSum {
        
        public iSumClient() {
        }
        
        public iSumClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public iSumClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iSumClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iSumClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetSum(int x, int y) {
            return base.Channel.GetSum(x, y);
        }
        
        public System.Threading.Tasks.Task<int> GetSumAsync(int x, int y) {
            return base.Channel.GetSumAsync(x, y);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="hRef.iMultiplicate")]
    public interface iMultiplicate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iMultiplicate/GetM", ReplyAction="http://tempuri.org/iMultiplicate/GetMResponse")]
        int GetM(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iMultiplicate/GetM", ReplyAction="http://tempuri.org/iMultiplicate/GetMResponse")]
        System.Threading.Tasks.Task<int> GetMAsync(int x, int y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface iMultiplicateChannel : Client.hRef.iMultiplicate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class iMultiplicateClient : System.ServiceModel.ClientBase<Client.hRef.iMultiplicate>, Client.hRef.iMultiplicate {
        
        public iMultiplicateClient() {
        }
        
        public iMultiplicateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public iMultiplicateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iMultiplicateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iMultiplicateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetM(int x, int y) {
            return base.Channel.GetM(x, y);
        }
        
        public System.Threading.Tasks.Task<int> GetMAsync(int x, int y) {
            return base.Channel.GetMAsync(x, y);
        }
    }
}
